chown yejianwu README.md	#将README.md的文件所有者改为yejianwu

ln -s src dest		#将源文件src生成一个链接dest
unlink dest		#取消链接

ls **/*.py		#列出当前目录下所有.py结尾的文件名
grep -rn "Hello World" *	#查询当前路径下所有文件中包含"Hello World"的行
				#-r表示递归查找， -n表示显示行号， -i忽略大小写
				#find . -name "helloworld.cpp" 查找当前路径下文件名为helloworld.cpp的文件路径

sed

tail -f filename	#动态显示文件末尾内容

pushd .					#将当前路径入栈

popd						#转到栈头部的路径中

scp

ssh

df -h						#查看磁盘使用情况

du -sh					#查看当前目录的大小

du -h --max-depth=1			#查看当前目录下深度为1的文件、文件夹大小

ldd						#查看程序依赖库

``						#貌似可以表示一段子命令的执行结果，eg：
							#ldd `which mysql`	表示显示mysql的依赖库

ldconfig -p		#打印当前缓存文件所保存的所有共享库的名字

eog  a.png		#打开图片a.png

gedit .bashrc		#打开环境变量配置文件

ctr-r		#根据输入索引历史command

apt-cache search libbz2	#搜索带有"libbz2"的安装包

echo			#显示一行文本介绍

.		#当前目录
..		#父目录

ls -l   	#查看当前目录下文件的详细资料 包括文件权限、文件硬链接数目、文件属主的用户名、文件所属用户组的名字、文件大小、上次修改的时间、文件名

ls -l filename	#查看filename的详细资料

ls -l directory	#查看directory目录下的文件的详细资料

ls -a   	#列出所有文件,甚至包括文件名以圆点开头的隐藏文件。

ls *.cpp	#列出当前文件夹中所有*.cpp文件，其中"*"是通配符
		#find -name "*.cpp"是列出当前文件目录下，两者的区别在于，find还会索引子目录

ls -ah		#显示隐藏目录

touch filename		#创建文件

mkdir 目录名		#创建一个目录

cat	#cat 命令读取一个或多个文件,然后复制它们到标准输出。eg：cat [filename]

file filename	#打印文件内容的简单描述

less filename	#查看文本文件、摁q退出

mkdir directory...	#创建一个目录，在描述一个命令时(如上所示),当有三个圆点跟在一个命令的参数后面,这意味着那个参数可以重复

cp item... directory	#复制多个项目（文件或目录）倒directory目录下
			#-a, --archive 		复制文件和目录,以及它们的属性,包括所有权和权限。通
			#			常,复本具有用户所操作文件的默认属性。
			#-i, --interactive	在重写已存在文件之前,提示用户确认。如果这个选项不指
			#			定,cp 命令会默认重写文件。
			#eg：cp -i file1 file2	这条命令和上面的命令一样,除了如果文件 file2 存在的话,
			#			在文件 file2 被重写之前,会提示用户确认信息。
			#-r, --recursive	递归地复制目录及目录中的内容。当复制目录时,需要这个
			#			选项(或者 -a 选项)。
			#eg：cp -r dir1 dir2	复制目录 dir1 中的内容到目录 dir2。如果目录 dir2 不存在,
			#			创建目录 dir2,操作完成后,目录 dir2 中的内容和 dir1 中
			#			的一样。如果目录 dir2 存在,则目录 dir1(和目录中的内
			#			容) 将会被复制到 dir2 中。
			#-u, --update		当把文件从一个目录复制到另一个目录时,仅复制目标目录
			#			中不存在的文件,或者是文件内容新于目标目录中已经存在
			#			的文件。
			#-v, --verbose		显示翔实的命令操作信息

mv item1 item2	#把文件或目录“item1”移动或重命名为“item2”

mv item... directory	#把一个或多个条目从一个目录移动到另一个目录中。

rm item...	#删除一个或多个文件或目录  rm删除的文件不能复原
		#如果你只想删除一个目录中的 HTML 文件。输入:rm *.html
		#-r, --recursive	递归地删除文件,这意味着,如果要删除一个目录,而此目
		#			录又包含子目录,那么子目录也会被删除。要删除一个目
		#			录,必须指定这个选项。
		#-f, --force		忽视不存在的文件,不显示提示信息。这选项颠覆了”--
		#			interactive” 选项。

rmdir 空目录名  	#删除一个空目录

rm –rf 非空目录名 	#删除一个非空目录下的一切

type command	#type 命令是 shell 内部命令,它会显示命令的类别,给出一个特定的命令名(做为参数)。

help command	#显示内建命令的相关信息

--help		#显示命令所支持的语法和选项说明

man program	#显示被命令行使用的程序program的正式文档，叫作手册或手册页
		#手册文档的格式有点不同,一般地包含一个标题,命令语法的纲要,命令用途的说明,和
		#命令选项列表,及每个选项的说明。然而,通常手册文档并不包含实例,它打算作为一本参考
		#手册,而不是教材。
		#eg：man ls

info program	#显示程序info条目

sort		#sort将文件的每一行作为一个单位，相互比较，比较原则是从首字符向后，依次按ASCII码值进行比较，最后将他们按升序输出。

uniq		#uniq 从标准输入或单个文件名参数接受数据有序列表(详情查看 uniq 手册页),默认情况下,从数据列表中删除任何重复行

head/tail -n num filename	#输出filename中前/后num行的数据
				#eg：head -n 10 main.cpp

clear	#清空屏幕
history	#显示历史列表内容

chmod 3-Octal filename	#修改文件权限
			#eg：chmod 777 main.cpp
			#Octal	Binary	File Mode
			#0 	000 	---
			#1 	001 	--x
			#2 	010 	-w-
			#3 	011 	-wx
			#4 	100 	r--
			#5 	101 	r-x
			#6 	110 	rw-
			#7 	111 	rwx

grep pattern [file...]	#当 grep 遇到一个文件中的匹配 “模式”,它会打印出包含这个类型的行。
			#eg：less main.cpp|grep main
			#grep 有-对方便的选项:“-i” 导致 grep 忽略大小写当执行搜索时(通常,搜索是大小写敏
			#感的),“-v” 选项会告诉 grep 只打印不匹配的行。
			#eg：less main.cpp|grep -v main

grep 'nginx\|chromium'	#同时grep多个字符串

ps aux | grep -E "*[n]ginx"	#列出所有包含nginx的进程，但不显示这条命令本身

ps	#默认情况下只显示与当前会话框相关的进程 TTY是 “Teletype” 的简写,是指进程的控制终端

ps x	#展示所有进程,不管它们由什么终端(如果有的话)控制 在TTY一栏中出现的“?”,表示没有控制终端

ps aux  #列出所有进程
	#USER  PID     %CPU   %MEM  VSZ           RSS         TTY          STAT START   TIME COMMAND
	#      进程id               虚拟内存大小   
	#RSS表示进程占用的物理内存的大小,以千字节为单位
	#TTY表示控制终端的ID
	#STAT–也就是当前进程的状态，其中S-睡眠，s-表示该进程是会话的先导进程，N-表示进程拥有比普通优先级更低的优先级，R-正在运行，D-不可中断睡眠
	#Z-僵尸进程，T-已停止，已经指示进程停止运行
	#START–这个很简单，就是该进程启动的时间 TIME–进程已经消耗的CPU时间，注意是消耗CPU的时间 COMMOND–命令的名称和参数

top	#ps只是提供ps 命令执行时刻的机器状态快照
	#top 程序连续显示系统进程更新的信息
	#top 显示结果由两部分组成:最上面是系统概要,下面是进程列表,以 CPU 的使用率排序。
	#行号 	字段 		意义
	#1 	top 		程序名。
	#	14:59:20 	当前时间。
	#	up 6:30 	这是正常运行时间。它是计算机从上次启动到现在所
	#			运行的时间。在这个例子里,系统已经运行了六个半
	#			小时。
	#	2 users 	有两个用户登录系统。
	#	load average: 	加载平均值是指,等待运行的进程数目,也就是说,
	#			处于运行状态的进程个数,这些进程共享 CPU。展示
	#			了三个数值,每个数值对应不同的时间周期。第一个
	#			是最后 60 秒的平均值,下一个是前 5 分钟的平均值,
	#			最后一个是前 15 分钟的平均值。若平均值低于 1.0,
	#			则指示计算机工作不忙碌。
	#2 	Tasks: 		总结了进程数目和各种进程状态。
	#3 	Cpu(s): 	这一行描述了 CPU 正在执行的进程的特性。
	#	0.7%us		0.7% of the CPU is being used for user processes. 这
	#			意味着进程在内核之外。
	#	1.0%sy 		1.0% 的 CPU 时间被用于系统(内核)进程。
	#	0.0%ni 		0.0% 的 CPU 时间被用于”nice”(低优先级)进程。
	#	98.3%id 	98.3% 的 CPU 时间是空闲的。
	#	0.0%wa 		0.0% 的 CPU 时间来等待 I/O。
	#4 	Mem: 		展示物理内存的使用情况。
	#5 	Swap: 		展示交换分区(虚拟内存)的使用情况。
	#Buffer一般都不太大，在一个通用的Linux系统中，一般都是在几十到几百M字节，
	#用于存储磁盘块设备的元数据，比如那些块属于那些文件，文件的权限，目录等信息。
	#Cache一般会很大, 一般都是G字节以上, 用于存储读写文件的页, 当对一个文件进行读的时候, 
	#会取磁盘文件页到此内存区域,然后从内存进行读取,当写入一个文件,会先写到此缓存,并将相关的页面标记为”dirty”。
	#buffers是用来存储，目录里面有什么内容，权限等等。而cached直接用来记忆我们打开的文件

pstree	#输出一个树型结构的进程列表,这个列表展示了进程间父/子关系。

kill [-signal] PID...	#如果在命令行中没有指定信号,那么默认情况下,发送 TERM(终止)信号

netstat -i	#提供网络接口的信息

netstat -ie	#e表示extand，显示扩展信息
		#netstat 程序被用来检查各种各样的网络设置和统计数据 使用“-ie”选项,我们能够查看系统中的网络接口
		#eth0是因特网接口  lo是内部回环网络接口
		#貌似效果与ifconfig命令一样

ifconfig interface	#获得interface的详细信息
			#ifconfig eth0

locate	#这个 locate 程序快速搜索路径名数据库,并且输出每个与给定字符串相匹配的文件名

find	#locate 程序只能依据文件名来查找文件,而 find 程序能基于各种各样的属性,搜索一个给定目录(以及它的子目录),来查找文件
	#find -name "*.txt" 列出所有当前目录下的.txt文件


lscpu	#查看的是cpu的统计信息
	
cat /proc/cpuinfo	#可以知道每个cpu信息，如每个CPU的型号，主频等。

free	#显示内存信息，单位是KB，如果是free -m单位就变成MB
	#total:总计物理内存的大小。
	#used:已使用多大。
	#free:可用有多少。
	#Shared:多个进程共享的内存总额。
	#Buffers/cached:磁盘缓存的大小。

ulimit -a	#显示当前所有的资源限制.
		#ulimit -s可以查stack的大小

mount	#mount [-t vfstype] [-o options] device dir 

umount

wc -l	#统计行数
	#eg：ls -l | wc -l

ipcs -a		#是默认的输出信息 打印出当前系统中所有的进程间通信方式的信息
ipcs -m		#打印出使用共享内存进行进程间通信的信息
ipcs -q		#打印出使用消息队列进行进程间通信的信息
ipcs -s		#打印出使用信号进行进程间通信的信息
ipcs -t		#输出信息的详细变化时间
ipcs -p		#输出ipc方式的进程ID
ipcs -c		#输出ipc方式的创建者/拥有者,输出ipc各种方式的在该系统下的限制条件信息
ipcs -u		#输出当前系统下ipc各种方式的状态信息(共享内存，消息队列，信号)
		#shmid：表示共享内存段id 
		#owner：表示共享内存段属于哪个用户，需要注意的是默认情况下600表示除root用户外不允许其他用户查看 
		#bytes：表示共享内存段大小 
		#nattch：表示连接到共享内存段的进程数 
		#status：表示共享内存段的状态，dest表示该内存段被标记为destroyed状态。
		#cpid表示创建共享内存段进程的id 
		#lpid表示上一次访问该共享内存的进程id 
ipcs -m -i 524300 	#查看shmid为524300的具体信息

ipcrm -M shmkey  	#移除用shmkey创建的共享内存段
ipcrm -m shmid    	#移除用shmid标识的共享内存段
			#eg:ipcrm –m 3735562
ipcrm -Q msgkey  	#移除用msqkey创建的消息队列
ipcrm -q msqid  	#移除用msqid标识的消息队列
ipcrm -S semkey  	#移除用semkey创建的信号
ipcrm -s semid  	#移除用semid标识的信号


tcpdump
